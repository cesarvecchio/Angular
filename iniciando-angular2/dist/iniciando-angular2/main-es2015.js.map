{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/employee-list/employee-list.component.ts","./src/app/employee-list/employee-list.component.html","./src/app/employee-new/employee-new.component.ts","./src/app/employee-new/employee-new.component.html","./src/app/employee.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'iniciando-angular2';\n}\n","<employee-new></employee-new>\r\n<employee-list></employee-list>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\nimport { EmployeeNewComponent } from './employee-new/employee-new.component';\nimport {FormsModule} from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EmployeeListComponent,\n    EmployeeNewComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport employees from '../employees';\nimport {EmployeeService} from '../employee.service';\n\n@Component({\n  selector: 'employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css']\n})\nexport class EmployeeListComponent implements OnInit {\n\n  // employees = employees;\n\n  constructor(public employeeService: EmployeeService) { \n\n  }\n\n  ngOnInit(): void {\n  }\n\n  getSalaryColor(employee){\n    return employee.salary > 20000 ? 'green' : 'null';\n  }\n}\n","<h1>Nossos empregados</h1>\n\n<!--  -->\n<table>\n    <thead>\n        <tr>\n            <th>Nome</th>\n            <th>Salário</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let employee of employeeService.employees; let i = index;\" [id] = \"'tr ' + i\">\n            <!-- <td> {{ employee.name }} </td>\n            <td> {{employee.salary}} </td> -->\n            <td [innerHtml] = \"employee.name\"></td>\n            <!-- <td [innerHtml] = \"employee.salary\" \n                [style.color] = \"getSalaryColor(employee)\"></td> -->\n            <td [innerHtml] = \"employee.salary\"\n                [ngClass] = \" {'salary-expensive' : employee.salary > 20000, 'salary-cheap': employee.salary < 1000} \"></td>\n                \n            <td> {{employee.bonus}} </td>\n        </tr>\n    </tbody>\n</table>","import { Component, OnInit } from '@angular/core';\nimport employees from '../employees';\nimport {Employee, EmployeeService} from '../employee.service';\n\n//Data binding\n@Component({\n  selector: 'employee-new',\n  templateUrl: './employee-new.component.html',\n  styleUrls: ['./employee-new.component.css']\n})\nexport class EmployeeNewComponent implements OnInit {\n\n  employee: Employee = {\n    name: '',\n    salary: 0,\n    bonus: 0,\n  }\n\n  constructor(private employeeService: EmployeeService) {\n  //  setTimeout( () => {\n  //  this.name = 'School of Net';\n  //  },  3000);\n\n  }\n\n  ngOnInit(): void {\n  }\n\n  addEmployee(event){\n    const copy = Object.assign( {}, this.employee );\n    this.employeeService.addEmployee(copy);\n  }\n\n}\n","<label>Nome</label>\n\n<!-- colocando uma propriedade entre [] ira tornala reativa -->\n<!-- fazendo com que o 'value' seja igual a propriedade 'name' do component  -->\n<!-- porem o so será alterado atravez de progrmação -->\n\n<!-- colocando um propriedade entre [(ngModel)] ira transforma-la em um diretiva -->\n<!-- ela irá interferir em elementos HTML -->\n<input type=\"text\" [(ngModel)]=\"employee.name\"><br> <!-- Two way data binding -->\n<!-- Em propriedade reativas apenas a programação altera o template -->\n<!-- Diretivas alteram a class/component -->\n\n<label>Salario</label>\n<input type=\"text\" [(ngModel)]=\"employee.salary\"><br>\n\n<!-- <div *ngIf=\"salary < 1000\">\n    <label>Bonus</label>\n    <input type=\"text\" [(ngModel)]=\"bonus\"><br>\n</div> -->\n\n<div [hidden]=\"employee.salary > 1000\">\n    <label>Bonus</label>\n    <input type=\"text\" [(ngModel)]=\"employee.bonus\"><br>\n</div>\n\n\n<!-- Ao ultilizar () em uma propriedade ela se tornara um evento -->\n<!-- Um evento sempre alterara a programação -->\n<button type=\"button\" (click)=\"addEmployee($event)\">Adicionar o empregado</button>\n<!-- Template  -> Componente -->\n<!-- Componente -> Template -->\n\n<!-- Interpolação -->\n<!-- {{ name }} -->","import { Injectable } from '@angular/core';\n  \nexport interface Employee{\n  name: string;\n  salary: number;\n  bonus: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService { \n  employees: Employee[] = [];\n  \n  constructor() { \n  }\n\n  addEmployee(employee: Employee){\n    employee.bonus = employee.salary >= 1000 ? 0 : employee.bonus;\n    this.employees.push(employee);\n  }  \n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}