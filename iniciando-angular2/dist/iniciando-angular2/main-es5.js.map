{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/employee-list/employee-list.component.ts","webpack:///src/app/employee-list/employee-list.component.html","webpack:///src/app/employee-new/employee-new.component.ts","webpack:///src/app/employee-new/employee-new.component.html","webpack:///src/app/employee.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","EmployeeListComponent","employeeService","employee","salary","EmployeeNewComponent","name","bonus","event","copy","Object","assign","addEmployee","EmployeeService","employees","push","providedIn","environment","production","bootstrapModule","catch","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'iniciando-angular2';\n}\n","<employee-new></employee-new>\r\n<employee-list></employee-list>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\nimport { EmployeeNewComponent } from './employee-new/employee-new.component';\nimport {FormsModule} from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EmployeeListComponent,\n    EmployeeNewComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport employees from '../employees';\nimport {EmployeeService} from '../employee.service';\n\n@Component({\n  selector: 'employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css']\n})\nexport class EmployeeListComponent implements OnInit {\n\n  // employees = employees;\n\n  constructor(public employeeService: EmployeeService) { \n\n  }\n\n  ngOnInit(): void {\n  }\n\n  getSalaryColor(employee){\n    return employee.salary > 20000 ? 'green' : 'null';\n  }\n}\n","<h1>Nossos empregados</h1>\n\n<!--  -->\n<table>\n    <thead>\n        <tr>\n            <th>Nome</th>\n            <th>Salário</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let employee of employeeService.employees; let i = index;\" [id] = \"'tr ' + i\">\n            <!-- <td> {{ employee.name }} </td>\n            <td> {{employee.salary}} </td> -->\n            <td [innerHtml] = \"employee.name\"></td>\n            <!-- <td [innerHtml] = \"employee.salary\" \n                [style.color] = \"getSalaryColor(employee)\"></td> -->\n            <td [innerHtml] = \"employee.salary\"\n                [ngClass] = \" {'salary-expensive' : employee.salary > 20000, 'salary-cheap': employee.salary < 1000} \"></td>\n                \n            <td> {{employee.bonus}} </td>\n        </tr>\n    </tbody>\n</table>","import { Component, OnInit } from '@angular/core';\nimport employees from '../employees';\nimport {Employee, EmployeeService} from '../employee.service';\n\n//Data binding\n@Component({\n  selector: 'employee-new',\n  templateUrl: './employee-new.component.html',\n  styleUrls: ['./employee-new.component.css']\n})\nexport class EmployeeNewComponent implements OnInit {\n\n  employee: Employee = {\n    name: '',\n    salary: 0,\n    bonus: 0,\n  }\n\n  constructor(private employeeService: EmployeeService) {\n  //  setTimeout( () => {\n  //  this.name = 'School of Net';\n  //  },  3000);\n\n  }\n\n  ngOnInit(): void {\n  }\n\n  addEmployee(event){\n    const copy = Object.assign( {}, this.employee );\n    this.employeeService.addEmployee(copy);\n  }\n\n}\n","<label>Nome</label>\n\n<!-- colocando uma propriedade entre [] ira tornala reativa -->\n<!-- fazendo com que o 'value' seja igual a propriedade 'name' do component  -->\n<!-- porem o so será alterado atravez de progrmação -->\n\n<!-- colocando um propriedade entre [(ngModel)] ira transforma-la em um diretiva -->\n<!-- ela irá interferir em elementos HTML -->\n<input type=\"text\" [(ngModel)]=\"employee.name\"><br> <!-- Two way data binding -->\n<!-- Em propriedade reativas apenas a programação altera o template -->\n<!-- Diretivas alteram a class/component -->\n\n<label>Salario</label>\n<input type=\"text\" [(ngModel)]=\"employee.salary\"><br>\n\n<!-- <div *ngIf=\"salary < 1000\">\n    <label>Bonus</label>\n    <input type=\"text\" [(ngModel)]=\"bonus\"><br>\n</div> -->\n\n<div [hidden]=\"employee.salary > 1000\">\n    <label>Bonus</label>\n    <input type=\"text\" [(ngModel)]=\"employee.bonus\"><br>\n</div>\n\n\n<!-- Ao ultilizar () em uma propriedade ela se tornara um evento -->\n<!-- Um evento sempre alterara a programação -->\n<button type=\"button\" (click)=\"addEmployee($event)\">Adicionar o empregado</button>\n<!-- Template  -> Componente -->\n<!-- Componente -> Template -->\n\n<!-- Interpolação -->\n<!-- {{ name }} -->","import { Injectable } from '@angular/core';\n  \nexport interface Employee{\n  name: string;\n  salary: number;\n  bonus: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService { \n  employees: Employee[] = [];\n  \n  constructor() { \n  }\n\n  addEmployee(employee: Employee){\n    employee.bonus = employee.salary >= 1000 ? 0 : employee.bonus;\n    this.employees.push(employee);\n  }  \n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}